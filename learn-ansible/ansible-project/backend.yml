- name: Backend App
  hosts: all
  become: yes
  vars: 
   ansible_python_interpreter: /usr/bin/python
  tasks:
   - name: Disable other versions of NodeJS
     ansible.builtin.shell: dnf module disable nodejs -y
    
   - name: Enable NodeJS module 20
     ansible.builtin.shell: dnf module enable nodejs:20 -y

   - name: Install nodeJS version 20
     ansible.builtin.dnf: 
      name: nodejs
      state: installed

   - name: Adding the application user
     ansible.builtin.user:
      name: expense

   - name: Clean the old content 
     ansible.builtin.file:
      path: /app
      state: absent
  
   - name: Create a new app directory
     ansible.builtin.file:
      path: /app
      state: directory
  
   - name: Download and Extract the app contents  
     ansible.builtin.unarchive:
      src: https://expense-artifacts.s3.amazonaws.com/expense-backend-v2.zip 
      dest: /app
      remote_src: yes

   - name: Download NodeJS dependencies
     community.general.npm:
      path: /app
      state: latest

   - name: Copy Backend Service file 
     ansible.builtin.copy:
      src: backend.service
      dest: /etc/systemd/system/backend.service
  
   - name: Install MySql Client
     ansible.builtin.dnf:
      name: mysql
      state: installed

   - name: Install Python Mysql Client
     ansible.builtin.pip:
      name:
       - PyMySQL
       - cryptography
      executable: pip3.9
    
   - name: Find the backend.mysql file 
     ansible.builtin.find:
      paths: /          
      patterns: 'backend.mysql'
      recurse: yes
     register: found_files

   - name: Show the full path of backend.mysql file(s)
     ansible.builtin.debug:
      msg: "File found at: {{ item.path }}"
      loop: "{{ found_files.files }}"
     when: found_files.files | length > 0

   - name: Fail if backend.mysql is not found
     ansible.builtin.fail:
      msg: "backend.mysql file not found anywhere on the remote machine."
     when: found_files.files | length == 0

   - name: Load Schema using found backend.mysql file
     community.mysql.mysql_db:
      state: import
      name: all
      target: "{{ found_files.files[0].path }}"
      login_user: root
      login_password: ExpenseApp@1
      login_host: 172.31.81.123
     when: found_files.files | length > 0
  
  

   - name: Start the backend service
     ansible.builtin.systemd_service:
      name: backend
      state: restarted
      enabled: yes
      daemon_reload: yes